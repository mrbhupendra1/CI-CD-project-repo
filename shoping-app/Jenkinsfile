pipeline {
    agent any

    environment {
        AWS_REGION      = "ap-south-1"
        AWS_ACCOUNT_ID  = "207963326787"   // your AWS account ID
        IMAGE_NAME      = "shopping-app"
        IMAGE_TAG       = "latest"
        DOCKER_REGISTRY = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/mrbhupendra1/shopping-app.git',
                    credentialsId: 'github-credentials'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t $IMAGE_NAME:$IMAGE_TAG .'
            }
        }

        stage('Push to AWS ECR') {
            steps {
                withCredentials([aws(credentialsId: 'aws-creds', region: "${AWS_REGION}")]) {
                    sh '''
                        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $DOCKER_REGISTRY
                        docker tag $IMAGE_NAME:$IMAGE_TAG $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
                        docker push $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
                    '''
                }
            }
        }

        stage('Deploy to Testing (VM2)') {
            steps {
                sshagent(['vm2-ssh']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ubuntu@10.0.2.55 "
                        docker pull $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG &&
                        docker rm -f shopping-app || true &&
                        docker run -d --name shopping-app -p 3000:3000 $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
                        "
                    '''
                }
            }
        }

        stage('Deploy to Production (VM3)') {
            steps {
                sshagent(['vm3-ssh']) {
                    sh '''
                        ssh -o StrictHostKeyChecking=no ubuntu@10.0.2.220 "
                        docker pull $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG &&
                        docker rm -f shopping-app || true &&
                        docker run -d --name shopping-app -p 3000:3000 $DOCKER_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
                        "
                    '''
                }
            }
        }
    }
}

